syntax = "proto3";
package csce438;
import "google/protobuf/timestamp.proto";

// ------------------------------------------------------------
// The coordinator service definition
// These are the different functionalities exposed by service
// ------------------------------------------------------------


service CoordService{
    //for servers
    rpc Heartbeat (ServerInfo) returns (HBResponse) {}

    //for clients
    rpc GetServer (ID) returns (ServerInfo) {}

    //for synchronizers
    //returned id is the machine number for the synchronizer
    rpc registerSynch (ServerInfo) returns (ID) {} 
    rpc getSynchs (Users) returns (ServerList) {}
    rpc getAllSynchs (ID) returns (ServerList) {}
}


// SynchService definition
service SynchService{
    //for synchronizers
    rpc newClientSynch (ID) returns (Confirmation) {}
    rpc newFollowSynch (Users) returns (Confirmation) {}
    rpc newPostSynch (Post) returns (Confirmation) {}

    //for servers
    rpc newClientServ (ID) returns (Confirmation) {}
    rpc newFollowServ (Users) returns (Confirmation) {}
    rpc newPostServ (Post) returns (Confirmation) {}
}

message ServerInfo{
    int32 clusterID = 1;
    int32 machineID = 2;
    string hostname = 3;
    string port = 4;
}

message ServerList{
    repeated int32 clusterID = 1;
    repeated int32 machineID = 2;
    repeated string hostname = 3;
    repeated string port = 4;
}

message MachineInfo{
    int32 machine = 1;
}

//for the response of heartbeat
message HBResponse {
    bool master = 1;
    string synchPort = 2;
    string slaveHostName = 3;
    string slavePort = 4;
}

message Confirmation{
    bool status = 1;
}

message ID{
    int32 id = 1;
}

message Users{
    repeated int32 users = 1; 
}

message Post {
  string username = 1;
  string post = 2;
  google.protobuf.Timestamp timestamp = 3;
}





